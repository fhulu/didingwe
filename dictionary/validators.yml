## YAML Template.
---
after_period:
  3: now()
  valid: sql(select timestampdiff($2,$3,'$value') > $1)
  error: $name must be after $1 $2

alphabetic: must_be([a-zA-Z]+,alphabetic)

alphaspace:
  valid:
    - must_be([a-zA-Z' ]+)
  error: $name must be alphabetic and may contain apostrophe

at_least:
  valid: /^.{$1,}$/s
  2: characters
  error: $name must be at least $1 $2

at_most:
  valid: /^.{0,$1}$/s
  2: characters
  error: $name must be at most $1 $2

before_period:
  3: now()
  valid: sql(select timestampdiff($2,'$value',$3) < '$1')
  error: $name must be before $1 $2

between:
  valid: range($value,$1,$2)
  error: $name ($value) must be between $1 and $2

blank:
  error: $name must be blank

collection:
  valid: collection.exists($1,$2)

collection_filter:
  4: ""
  valid: sql(select value$4 from collection where collection = '$1' and identifier = '$2' and attribute = '$3')

collection_unique:
  valid: collection.unique($1,$2,$value)
  error: $name already exists

contains_at_least:
  valid: /$1/s
  error: $name must contain at least $2

contains_only:
  valid: /^$1$/s
  2: $code
  error: $name must only contain $2

country:
  valid: in(mukonin_contact.country.code)

currency:
  valid: /^-?\d+\.\d\d$/
  error: $name must be in currency form

date:
  valid:
    - /^\d{4}([-\/])(0\d|1[0-2])\1([0-2][0-9]|3[01])$/
    - relate_time(Y-m-d,$1)

datetime:
  valid:
    - /^\d{4}([-\/])(0\d|1[0-2])\1([0-2][0-9]|3[01]) \d\d:\d\d(:\d\d)?$/
    - relate_time(Y-m-d H:i:s,$1)

decimal:
  valid: must_be(^-?\d+\.\d+,decimal)

digits:
  valid: contains_only(\d+,digits)

either:
  error: Invalid $name

email:
  valid: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i

empty:
  valid: /^$/
  error: $name must be empty
  
equals:
  valid: /^\s*$1\s*$/
  error: $name must equal $1

exists:
  error: $name does not exist

extension:
  valid: /\.$1$/i
  error: $name must be of type '$1'

find_in:
  error: No such $name ($value)

full_name:
  valid:
    - name
    - /^[^ ]+ +[^ ]+/

future_time:
  error: $name must be in the future

greater:
  error: $name must be greater than $1

greater_equal:
  error: $name must not be less than $1

in:
  valid: sql(select 1 from $1 where $2='$v2')
  error: No such $name ($value)

in_collection:
  valid: sql(select 1 from collection where collection = '$1' and attribute = '$name' and value='$value')

int_tel:
  valid:
    - /^\+\d+[-\d]*$/
    - at_least(10,digits)
  error: Please use international number format without space/s in betweeen for $name, e.g. +27823456789

ip_address:
  valid: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/

is: must_be($1)

less:
  error: $name must be less that $1 ($v1)

less_equal:
  error: $name must not be greater than $1 ($v1)

mac_address:
  valid: /[0-9a-f]{2}(:[0-9a-f]{2}){5})/
  
match:
  valid: equal($1)
  error: $name must be the same as $1

matches: match($1)

money:
  valid: /^\d+(\.\d+)?$/

must_be:
  valid: /^$1$/
  error: $name must be $2

name:
  valid:
    - at_least(2,characters)
    - /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u
    - /^((?!'').)*$/

national_tel:
  valid:
    - /^0\d+[- \d]*$/
    - at_least(10,digits)
  error: Please use national number format for $name, e.g. 0123456789

not:
  error: Invalid $name

not_same:
  valid: not(equal($1))
  error: $name must not be the same as $1

numeric: must_be(-?\d+(\.\d+)?,numeric)

password:
  valid:
    - at_least(6,characters)
    - contains_at_least([A-Z],one uppercase letter)
    - contains_at_least([a-z],one lowercase letter)
    - contains_at_least([^a-zA-Z],one digit or special character)
    - password_uncommon

password_common:
  valid:
    - or
    - /^p[a@]ssw[o0]rd$/i
    - /^pass(word)?\d+$/i
    - /^querty\d+$/i
    - /^\d+$/
  error: Use a common password

password_uncommon:
  valid:
    - not(/^p[a@]ssw[o0]rd$/i)
    - not(/^pass(word)?\d+$/i)
    - not(/^querty\d+$/i)
  error: Password too simple or common

past_time:
  error: $name must be in the past

proc: /^([a-z_]+)(?:\((.*)\))*$/

provided:
  error: $name must be provided

quantity:
  valid: digits
  error: $name must be a quantity

range:
  valid:
    - greater_equal($2)
    - less_equal($3)
  error: $1 ($v1) must be in range $2 to $3

regex:
  error: Invalid $name

relate_time:
  error: $name must be in the $2

same_month:
  valid: sql(select substr('$value',1,7) = substr('$v1',1,7))
  error: $name must be in the same month as $1 ($v1)

same_year:
  valid: sql(select substr('$value',1,4) = substr('$v1',1,4))
  error: $name must be in the same year as $1 ($v1)

sql:
  error: Invalid $name

sql_exists: # table[,column]
  2: $name
  valid: sql(select 1 from $1 where $2='$value')
  error: $name must exist

sql_exists_foreign: # table, column, foreign[, foreign_column]
  4: $3
  valid: sql(select 1 from $1 where $2='$value' and $3='$v4')
  error: $name must exist

sql_unique: # table[,column]
  2: $name
  valid: not(sql_exists($1,$2))
  error: $name ($value) already exists

sql_unique_foreign: # table, column, foreign[, foreign_column]
  4: $3
  valid: not(sql_exists_foreign($1,$2,$3,$4))
  error: $name ($value) already exists

telephone:
  valid: /^[+0]\d+$/
  error: $name must be digits, e.g. 0158745896

time:
  valid:
    - /^\d\d:\d\d(:\d\d)?$/
    - relate_time(H:i, $1)

unique:
  valid: not(in($1,$2))
  error: $name ($value) already exists

url: /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/

visitable:
  error: $name $value is not accessible from this site

year:
  valid:
    - /^\d{4}$/
    - relate_time(Y,$1)

za_code:
  valid:
    - numeric
    - at_least(4,digits)
    - at_most(4,digits)


za_company_reg:
  valid:
    #- earlier_than(now(Y))
    - /^(19|20)[0-9]{2}\/?[0-9]{6}\/?[0-9]{2}$/

za_id:
  valid:
    # - less_than(today)
    - /^\d{2}((0[1-9])|(1[0-2]))((0[1-9])|([12][0-9])|(3[01]))\d{7}$/

za_vat: /^\d{10}$/

za_tax_ref: /^\d{10}$/
