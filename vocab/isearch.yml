isearch:
  type: container
  create: isearch
  script: /didi/js/isearch.js
  placeholder: Search $name
  class: [ isearch,relative]
  contents: [ $searcher, $buttons, $drop]
  attr: { value: ""}
  on_disabled: |
    ~ function(e, disable) {
        $(this).find('.isearch-actioner').prop('disabled', disable).toggleClass('disabled', disable)
      }
  searcher:
    type: input
    derive: [placeholder]
    attr: { placeholder: $placeholder }
    class: [isearch-searcher isearch-actioner, widest]
  buttons:
    class: [isearch-buttons absolute top-right, tallest]
    type: container
    derive: [name,adder,dropper]
    contents: [$adder,$dropper]
  adder:
    tag: label
    text: +
    class: [isearch-adder isearch-actioner,inline-block, pointer-cursor]
    derive: [name]
    desc: Add a new $name
    action: dialog
    show: no
  dropper:
    type: [font_awesome,fanthom]
    icon: caret-down
    class: [isearch-dropper isearch-actioner,  inline-block, pointer-cursor middle-y]
    desc: Show all items
  drop:
    type: container
    class: [isearch-drop,overlay,fixed,scroll-y]
    text: ""
    height: auto
    show: no
    autoload: 10
  option:
    type: anchor
    class: [isearch-option,block,nomargin,undecorated,]
    value: $1
    chosen: $2
    name: $2
    embolden: [name]
    attr: { id: "", name: "", value: $value, chosen: $chosen }
  search_fields: name asc
  search_collection: $id
  post: []
