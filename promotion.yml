include: [datatable]
create:
  type: input_page
  modal:
    dialog:
      class: [col s12 m9 l8]
  inputs:
    - promotion_name
    - type: textarea
    - message_on_landing_page
    - message_after_login
    - trigger_action: { type: dropdown }
    - message_after_action
    - type: multi_input
    - validity
    - applicable_to
    - credits_granted: { type: number_input}
  actions:
    - create
  post:
    - collection.values: [trigger,[trigger_type: $trigger_action,start_time: $start_time,active: 1 ],found: id,trigger_name: trigger_type.name,start_time]
    - if $found:
        - aborxt: There is a $trigger_name promotion running or starting on the $start_time as the one you creating. Please first deactivate the current promotion or change dates for this one.
    - collection.insert: [trigger, name: $promotion_name,start_time, end_time, maximum_entries, entry_count: 0, credits_granted,message_on_landing_page,message_after_login,message_after_action,roles,trigger_type: $trigger_action]
    - let: { trigger: $new_trigger_id, trigger_url: "", triggered_url: popup, entries: 0}
    - collection.insert: [hook,trigger, trigger_url, triggered_url, roles: public, partner_type, method: show_dialog, parameters: {values: { message: $message_on_landing_page } }, entries]
    - collection.insert: [hook,trigger, trigger_url, triggered_url, roles: user, partner_type, method: show_dialog, parameters: {values: { message: $message_after_login } }, entries]
    - collection.values: [trigger_type, $trigger_action, trigger_url: url]
    - collection.insert: [hook,trigger, trigger_url, triggered_url, roles, partner_type, method: show_dialog, parameters: {values: { message: $message_after_action } }, entries]
    - let:
        parameters: { credits: custom, quantity: $credits_granted }
    - collection.insert: [hook,trigger, trigger_url, triggered_url: credits/grant, method: post, roles, partner_type, parameters, entries: 1]
    - sql_values: select now() create_time from dual
    - trigger: [addNewRow,".promotion-list",{key: $new_trigger_id,create_time: $create_time,name: $promotion_name,start_time: $start_time,end_time: $end_time,entry_count: 0,maximum_entries: $maximum_entries,credits_granted: $credits_granted,active: "Yes",actions: "expand,slide,edit,deactivate"}]
    - close_dialog: Promotion added
  audit:
    action: Create Promotion
    detail: "Promotion name: $promotion_name period: $start_time to $end_time"

textarea:
  height: 32


trigger_action:
  options:
    - collection.data: [trigger_type, "", id, name]


applicable_to:
  inputs:
    - type: checkgroup
    - roles
    - partner_type

roles:
  options:
    - public
    - user
    - admin
  valid: provided

partner_type:
  options:
    - individual
    - company
    - existing_account
    - post_paid

validity:
  inputs:
    - type: datetime_future
    - start_time
    - end_time
    - maximum_entries: { type: number_input }

manage:
  type: list
  class: [promotion-list]
  row_actions:
    - edit: {url: /promotion/edit,action: dialog}
    - activate: {class: [green]}
    - deactivate: {class: [red]}
  values:
    - collection.data: [trigger,[],id,create_time,name,start_time,end_time,entry_count,maximum_entries,credits_granted,active: '/if(active,"Yes","No")' ,actions: '/if(active,"expand,slide,edit,deactivate","expand,slide,,edit,activate")',active ]

list:
  type: datatable
  flags: [show_titles,filter]
  fields:
    - key: {show: no}
    - create_time: {width: 17%}
    - name: {width: 18%}
    - start_time: {width: 12%}
    - end_time: {width: 12%}
    - entry_count: {width: 10%}
    - maximum_entries: {width: 10%}
    - credits_granted: {width: 10%}
    - active
    - actions
  expand:
    pages:
      - /promotion/winners

winners:
  type: datatable
  flags: [show_titles,filter]
  fields:
    - time_won
    - first_name
    - last_name
    - prize
  values:
    - collection.data: [promo_entry,trigger: $key,date_won: create_time,first_name: winner.user.first_name,last_name: winner.user.last_name ,prize]

activate:
  confirmation: yes
  post:
    - collection.update: [trigger, $key,active: 1]
    - collection.values: [trigger,$key,promotion_name: name]
    - trigger: [setRowData,"",$key,{active: 'Yes',actions: "slide,edit,deactivate"}]
    - close_dialog: Promotion Activated.
  audit:
    action: Activate Promotion
    detail: $promotion_name


deactivate:
  confirmation: yes
  post:
    - collection.update: [trigger, $key,active: 0]
    - trigger: [setRowData,"",$key,{active: 'No',actions: "slide,edit,activate"}]
    - collection.values: [trigger,$key,promotion_name: name]
    - close_dialog: Promotion Deactivated.
  audit:
    action: Deactivate Promotion
    detail: $promotion_name

edit:
  type: input_page
  modal:
    dialog:
      class: [col s12 m9 l8]
  inputs:
    - promotion_name
    - type: textarea
    - message_on_landing_page
    - message_after_login
    - trigger_action: { type: dropdown }
    - message_after_action
    - type: multi_input
    - validity
    - applicable_to
    - credits_granted: { type: number_input}
  actions:
    - edit: {name: Save}
  values:
    - collection.values: [trigger,$key,trigger_type.url, promotion_name: name,start_time,end_time,maximum_entries,credits_granted,message_after_login,message_on_landing_page,message_after_action,trigger_action: trigger_type]
    - let: { trigger: $key, trigger_url: "", triggered_url: ""}
  post:
    - collection.update: [trigger,$key,delta,trigger_type: $trigger_action,name: $promotion_name]
    - collection.values: [trigger,$key,trigger_url: trigger_type.url]
    - collection.update: [hook,$key,trigger_url,roles: public,partner_type]
    - if "$message_on_landing_page":
        - collection.update: [hook,[trigger: $key,trigger_url: "",triggered_url: popup,roles: public],parameters: '{"values": { "message": "$message_on_landing_page" } }']
    - if "$message_after_login":
        - collection.update: [hook,[trigger: $key,trigger_url: "", triggered_url: popup ,roles: user],parameters: '{values: { "message": "$message_after_login" } }',partner_type]
    - if "$message_after_action":
        - collection.update: [hook, [trigger: $key,trigger_url: $trigger_url,triggered_url: popup,roles: public],parameters: '{"values": { "message": "$message_after_action" } }',partner_type]
    - trigger: [setRowData, .promotion-list, $key, {name: $promotion_name, start_time: $start_time, end_time: $end_time,maximum_entries: $maximum_entries,credits_granted: $credits_granted}]        
    - close_dialog: updated
  audit:
    action: Edit Promotion
    detail: Edited $delta

end_time:
  valid:
    - greater(start_time)

credits_granted:
  valid:
    - greater_equal(0)

maximum_entries:
  valid:
    - greater_equal(0)
