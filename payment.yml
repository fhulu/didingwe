include: [datatable,navigator,document]

approve:
  url: /payment/approve
  confirmation: yes
  post:
    - collection.values: [payment,$key,partner,user,quantity,client_name: partner.name,client_email: partner.email,reference1]
    - collection.values: [credit,payment: $key,payment_id: identifier]
    - collection.update: [credit,$payment_id,active: 1,time: '/now()', type: "purchased"]
    - collection.update: [payment,$key,status: "approved",start_time: '/now()']
    - emailer.send: {type: approval_email}
    - trigger: [removeRow,"",$key]
    - close_dialog: Payment Approved
  audit:
    action: Approve Manual payment
    detail: '$client_name Payment Ref: $reference1'

approval_email:
  from: $support_email
  to: $client_name <$client_email>
  subject: Proof of payment accepted
  message: >
    Dear <b>$client_name</b> <br><br>
    Your proof of payment was accepted. We have added  $quantity credits to your account.<br><br>
    Regards,<br><br>
    <b>Customer Operatio  ns</b>

banking_details:
  name: Banking Details
  url: /payment/banking_details
  type: input_page
  caption: This includes Cash Deposit and EFT transactions. Click for more information including bank details.
  desc: >
    You can use the following details when making a bank payment<br>
    Please ensure that you use the bank details and the reference number exactly as they are listed below.<br>
    iTouch will not be held responsible for incorrect deposit to a wrong account
  inputs:
    - type: disabled_input
    - bank
    - branch
    - branch_code
    - account_number
    - Expected amount for quantity as shown below: {type: plain_text,template: none}
    - quantity
    - amount
    - Please use the deposit reference below when making payments: {type: plain_text,template: none}
    - Once deposited press next to upload proof of payment: {type: plain_text,template: none}
    - vspace
    - reference: {class: [font-large,bold,text-orange]}
  values:
    - read_session: [quantity,amount: paygate_amount]
    - sql_values: |
        select 'Standard Bank of SA Ltd' bank, 'Thibault Square' branch,
        "02090900" branch_code,"070 885 095" account_number
    - collection.values: [session, $sid, partner, user]
    - let: {counter: 1}
    - collection.values: [payment,[partner],counter: '/count(1)+1' ]
    - sql_values: select LPAD($counter,'5','0') counter,concat("R",round('$amount'/100,2)) amount
    - let: [reference: BM$partner-$user-$counter]
  post:
    - write_session: [quantity,reference]


list:
  type: datatable
  sort: time
  sort_order: desc
  class: [widest]
  body: {max-height: 500}
  flags: [show_titles,filter]
  fields:
    - key: {show: no}
    - time: {width: 16%}
    - partner: { width: 26%, class: [truncate-word]}
    - reference: {width: 10%}
    - amount: {class: [right-text], width: 15%}
    - method: {width: 14%}
    - status: {width: 8%}
    - view_invoice: {width: 10%,type: document_link,attr: {id: $value}}

own_purchase_history:
  type: list
  fields:
    - actions: { width: 0% }
  expand:
    pages:
      - /payment/expansion_list
  values:
    - collection.values: [session, $sid, partner,user]
    - collection.data: [payment,[partner],identifier,create_time,partner: partner.name,reference1,payment: '/concat("R",round(amount/100,2))',payment_method.name,status: status.name,view_invoice: '/if(payment_method!="purchase_order",if(status!="pending",invoice,null),null)',amount,payment_method,invoice]


all_purchase_history:
  type: list
  fields:
    - actions: { width: 0% }
  expand:
    pages:
      - /payment/expansion_list
  values:
    - collection.values: [session, $sid, partner]
    - collection.data: [payment,[],identifier,create_time,partner: partner.name,reference1,payment: '/concat("R",round(amount/100,2))',payment_method.name,status: status.name,view_invoice: '/if(payment_method!="purchase_order",if(status!="pending",invoice,null),null)',amount,payment_method,invoice]
  on_approval: ~this.trigger('refresh')


own_outstanding_approvals:
  type: datatable
  sort: time
  sort_order: desc
  class: [widest]
  body: {max-height: 500}
  flags: [show_titles,filter]
  fields:
    - key: {show: no}
    - time: {width: 23%}
    - partner: { width: 20%, class: [truncate-word]}
    - reference: {width: 18%}
    - amount: {class: [right-text], width: 12%}
    - method: {width: 13%}
    - status: {width: 9%}
    - status_reason: {width: 10%}
    - proof_of_payment: { width: 13%, type: document_link,attr: {id: $value}}
    - actions: { width: 0% }
  expand:
    pages:
      - /payment/expansion_list
  row_actions:
    - re_upload: {name: Re-Upload, class: [orange,^widest], action: dialog,url: /payment/re_upload}
  values:
    - collection.values: [session, $sid, partner,user]
    - collection.data: [payment,[partner,payment_method: "bank_deposit", status: '/in("pending","declined")'],identifier,start_time,partner: partner.name,reference1,amount: '/concat("R",round(amount/100,2))',payment_method.name,status: status.name,status_reason,proof_of_payment,actions: '/if(status="declined","slide,re_upload,expand","expand")',amount,method]

all_outstanding_approvals:
  type: datatable
  sort: time
  sort_order: desc
  class: [widest]
  body: {max-height: 500}
  flags: [show_titles,filter]
  fields:
    - key: {show: no}
    - time: {width: 23%}
    - partner: { width: 20%, class: [truncate-word]}
    - reference: {width: 18%}
    - amount: {class: [right-text], width: 12%}
    - method: {width: 13%}
    - status: {width:  9%}
    - status_reason: {width: 10%}
    - proof_of_payment: { width: 13%, type: document_link,attr: {id: $value}}
    - actions: { width: 0% }
  expand:
    pages:
      - /payment/expansion_list
  row_actions:
    - approve: {class: [green],access: [finance]}
    - decline_payment: {class: [red],name: Decline,action: dialog,access: [finance]}
  values:
    - collection.values: [session, $sid, partner]
    - collection.data: [payment,[status: pending, payment_method: bank_deposit],identifier, start_time,partner: partner.name,reference1,amount: '/concat("R",round(amount/100,2))',payment_method.name,status: status.name,status_reason,proof_of_payment,actions: '/"expand,slide,approve,decline_payment"',method,amount]

re_upload:
  name: Re-Upload Proof Of Payment
  type: input_page
  url: /payment/re_upload
  class: [widest]
  modal:
    dialog: { class: [col s12 m10 l6] }
  inputs:
    - type: disabled_input
    - proof_of_payment: {type: file_uploader }
  actions:
    - re_upload: {name: Save Document}
  post:
    - read_session: new_document_id
    - collection.values: [session, $sid, partner,client_name: partner.name,user]
    - collection.values: [payment,$key,client_name: partner.name,reference: reference1]
    - collection.update: [payment,$key,status: "pending",status_reason: "Awaiting Review",start_time: '/now()',end_time: '/now()', proof_of_payment: $new_document_id]
    - foreach:
        - collection.data: [user, [role: finance,partner.type: merchant],first_name,last_name,email]
        - emailer.send: { type: proof_of_payment_email}
    - trigger: [setRowData,"",$key,{status: "Pending",status_reason: "Awaiting Review",actions: 'slide,""'}]
    - alert: Successfully Uploaded
    - close_dialog
  audit:
    action: Re-Upload Proof of Bank Deposit
    detail: "$client_name Deposit Ref: $reference"


expansion_list:
  name: Credits
  type: datatable
  body: { max-height: 300 }
  flags: [show_titles]
  class: [widest]
  fields:
    - time: { width: 40%}
    - quantity: { width: 30% }
    - amount: { width: 30%,class: [right-text] }
  values:
    - collection.data: [credit, payment: $key, time,quantity,amount: '/concat("R",round(payment/100,2))',payment: payment.amount]

upload_proof:
  url: /payment/upload
  type: input_page
  class: [widest]
  inputs:
    - reference
    - type: disabled_input
    - quantity
    - amount
    - proof_of_payment: {type: file_uploader}
  values:
    - read_session: [reference,quantity,amount: paygate_amount]
    - sql_values: select concat("R",round($amount/100,2)) amount
  post:
    - read_session: [new_document_id,paygate_amount,payment_method]
    - collection.values: [session, $sid, partner,client_name: partner.name,user]
    - collection.insert: [payment,amount: $paygate_amount,quantity,status: "pending",status_reason: "Awaiting Review",payment_method: "bank_deposit",reference1: $reference,start_time: '/now()',end_time: '/now()', proof_of_payment: $new_document_id]
    - collection.insert: [credit,quantity, payment: $new_payment_id, type: "reserved", active: 0, time: '/now()',amount: $paygate_amount]
    - read_config: currency,upload_dir
    - collection.values: [payment,[],counter: '/count(1)+1' ]
    - sql_values: select LPAD($counter,'6','0') counter
    - let: {invoice_number: IN$counter}
    - let: {path: $upload_dir/$invoice_number.pdf}
    - collection.insert: [document,name: Invoice Number $invoice_number,path,mime: pdf]
    - collection.update: [payment,$new_payment_id,invoice: $new_document_id]
    - qmessenger.generate_invoice: [$partner, $invoice_number, $path,$currency,$new_credit_id,$payment_method]
    - foreach:
        - collection.data: [user, [role: finance,partner.type: merchant],first_name, last_name, email]
        - emailer.send: { type: proof_of_payment_email}
  audit:
    action: Uploaded Proof of Bank Deposit
    detail: "$client_name Deposit Ref: $reference"

proof_of_payment_email:
  from: $support_email
  to: $first_name $last_name <$email>
  subject: Proof of payment
  message: >
    Dear <b>$first_name $last_name</b> <br><br>
    $client_name with partner id: $partner has made payment with deposit reference: $reference<br><br>
    Regards,<br><br>
    <b>Customer Operations</b>

make_payment:
  type: input_page
  modal:
    dialog: { class: [col s12 m10 l9] }

  class: [col s12 m10 l9, centered, no-float]
  validate: none
  inputs:
    - credits:
        type: checkgroup
        options:
          - collection.values: [session,$sid,partner]
          - collection.data: [credit,[partner],identifier,quantity]

    - payment_method: { type: radiogroup }
  actions:
    - proceed

decline_payment:
  url: /payment/decline_payment
  desc: Please state your reason for declining the submitted proof of payment.
  type: input_page
  modal:
    dialog: { class: [col s12 m10 l6] }
  inputs:
    - reason: {type: textarea,valid: [provided], class: [brand-font]}
  actions:
    - decline:
        post:
          - collection.values: [payment,$key,reference1,partner,user,client_name: partner.name,client_email: partner.email]
          - collection.update: [payment,$key,status: "declined",status_reason: $reason]
          - emailer.send: {type: rejection_email}
          - trigger: [removeRow,"",$key]
          - close_dialog: Proof of payment rejected.
        audit:
          action: Decline Bank Deposit Proof
          detail: "$client_name Reference: $reference1"
    - cancel: {action: close_dialog}

rejection_email:
  from: $support_email
  to: $client_name <$client_email>
  subject: Rejection of proof of payment
  message: >
    Dear <b>$client_name</b> <br><br>
    Your proof of payment with reference: $reference1 was rejected due to $reason<br><br>
    Regards,<br><br>
    <b>Customer Operations</b>

view_proof:
    desc: Proof of payment
    target: _blank

purchase_orders:
  type: datatable
  class: [widest]
  body: {max-height: 800px}
  flags: [show_titles, filter]
  sort: time_added
  sort_order: desc
  fields:
    - key: {show: no}
    - time_added: {width: 20%}
    - partner: {width: 20%}
    - email: {width: 20%}
    - order_number: {width: 20%}
    - view_purchase_order: {type: document_link,attr: {id: $value}}

view_purchase_orders:
  access: [admin,finance]
  partner_access: merchant
  type: purchase_orders
  values:
    - collection.data: [payment,[payment_method: "purchase_order"],identifier,create_time,partner: partner.name,partner.email,reference1,view_purchase_order: purchase_order,method]

own_purchase_orders:
  access: admin
  partner_access: post_paid
  type: purchase_orders
  fields:
    - pop: partner
    - pop: email
  values:
    - collection.values: [session,$sid,partner]
    - collection.data: [payment,[payment_method: "purchase_order",partner],identifier,create_time,reference1,view_purchase_order: purchase_order,method]
